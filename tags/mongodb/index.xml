<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mongodb on kfei&#39;s brainfuck</title>
    <link>https://kfei.net/posts/tags/mongodb/</link>
    <description>Recent content in Mongodb on kfei&#39;s brainfuck</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-tw</language>
    <lastBuildDate>Sat, 19 Oct 2013 14:05:00 +0800</lastBuildDate>
    <atom:link href="https://kfei.net/posts/tags/mongodb/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>The query builder in MongoDB Java driver</title>
      <link>https://kfei.net/posts/2013/10/the-query-builder-in-mongodb-java-driver/</link>
      <pubDate>Sat, 19 Oct 2013 14:05:00 +0800</pubDate>
      
      <guid>https://kfei.net/posts/2013/10/the-query-builder-in-mongodb-java-driver/</guid>
      <description>&lt;p&gt;一直都習慣先在 Mongo Shell 裡邊寫邊測 query, 所以寫進 Java code
時自然也就習慣了用 &lt;code&gt;DBObject&lt;/code&gt; 這種 document 樣式的 query 寫法. 例如:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;DBObject query = new BasicDBObject( &amp;quot;x&amp;quot;, new BasicDBObject( &amp;quot;$lt&amp;quot;, 1 ) )
                .append( &amp;quot;y&amp;quot;, new BasicDBObject( &amp;quot;$gt&amp;quot;, 10).append( &amp;quot;$lt&amp;quot;, 90 ) )
                .append( &amp;quot;z&amp;quot;, new BasicDBObject( &amp;quot;$in&amp;quot;, Arrays.asList( 1, 3, 5, 7 ) ) );
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在 Mongo Shell 等價於這樣的 query json:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;{ x : { $lt : 1 }, y : { $gt : 10, $lt : 90 }, z : { $in : [1, 3, 5, 7] } }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;然而, 對於更複雜的 query, 會因為更多的 &lt;code&gt;new BasicDBObject&lt;/code&gt; 而變得更肥大且不可讀. 這或許就是 query builder 上場的好時機吧! 上面的 query 用 builder 的寫法如下, 可以比較直覺的讀懂, 對其他團隊成員或是將來的自己都更友善了些:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-java&#34;&gt;QueryBuilder query = QueryBuilder.start( &amp;quot;x&amp;quot; ).lessThan( 10 )
                    .and( &amp;quot;y&amp;quot; ).greaterThan( 10 ).lessThan( 90 )
                    .and( &amp;quot;z&amp;quot; ).in( Arrays.asList( 1, 3, 5, 7 ) );
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>